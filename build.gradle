apply plugin: "groovy"

version = "1.0"
description = "Spock Framework - Selfpub tests"

// Spock works with Java 1.5 and above
sourceCompatibility = 1.5

repositories {
    // Spock releases are available from Maven Central
    mavenCentral()
    // Spock snapshots are available from the Sonatype OSS snapshot repository
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {

    def dependencies = [
        swaggerParser:'1.0.22',
        springVersion:'4.1.6.RELEASE'
    ]

    // for testing rest.
    compile "org.springframework:spring-web:${dependencies.springVersion}"
    compile "org.springframework:spring-webmvc:${dependencies.springVersion}"
    compile "org.springframework:spring-context-support:${dependencies.springVersion}"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.4'
    compile 'org.codehaus.groovy:groovy-backports-compat23:2.3.7'
//    compile group: 'io.swagger', name: 'swagger-jaxrs', version: dependencies.swaggerParser
    compile group: 'io.swagger', name: 'swagger-parser', version: dependencies.swaggerParser
    compile 'com.google.guava:guava:19.0'

    // mandatory dependencies for using Spock
    // initial dependencies.
    compile "org.codehaus.groovy:groovy-all:2.4.1"
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"
    // allows mocking of classes without default constructor (together with CGLIB)

    // dependencies used by examples in this project
    testRuntime "com.h2database:h2:1.4.182"
}

// the remaining configuration is specific to this project, and is not required for using Spock

apply from: "gradle/ide.gradle"

task collectJars(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testRuntime
}



